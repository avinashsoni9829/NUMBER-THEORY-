BINARY EXPONENTIATION:
	
	  
	  
	  time: O(log N)
	  
	  
	  function:  
	  
	  
	      a pow n =    	1  if n==0
	                    
	                    (a pow n/2 ) * ( a pow n/2)  if n is even and n >0
	                    
	                    a * ( a pow (n-1)/2) * ( a pow (n-1)/2)  if n is odd and n >0
	                    
	      
		  
		  
		  #implementation:
		  
		  
		  
		      simple :
			  
			  
			  
			  long long  int  expo( long long int  a ,long long int b)
		 	  {
		 	  	
		 	  	
		 	  	    if(b==0)
		 	  	    return 1;
		 	  	    
		 	  	   long long res= expo(a,b/2);
		 	  	   
		 	  	   if(b&1)
		 	  	   
		 	  	   return res*res*a;
		 	  	   
		 	  	   else
		 	  	   return res * res ;
		 	  	   
		 	 }
			  
			  
			 
			 #optimal :
			 
			 
			    long long int expo( long long int a,long long int b)
				{
					long long int ans=1;
					
					while(b>0)
					{
						if(b&1)
						ans*=a;
						
						a*=a;
						b>>=1;
						
					}
				    
			   }
			  
			  
			  
			                
	                      
