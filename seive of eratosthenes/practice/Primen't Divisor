#include<bits/stdc++.h>
using namespace std;

#define ll long long int
#define vi vector<int>
#define vl vector<ll>
#define inp(x)  for(auto &t:x) cin>>t;
#define itr     vector<int>::iterator
#define debug(a) cout << #a << "=" << a << ' '<<endl;
#define out(x)  for(auto &t:x) cout<<t<<" "; cout<<endl;
#define ff first
#define ss second
#define pb push_back
#define initialize(a,v)  for(int i=0;i<a.size();++i) a[i]=v;
int noofdig(int N)
{
	return floor(log10(N))+1;
}


void printDivisors(int n)
{
        for (int i=1; i<=sqrt(n); i++)
    {
        if (n%i == 0)
        {

            if (n/i == i)
                printf("%d ", i);

            else
                printf("%d %d ", i, n/i);
        }
    }
}

ll expo(ll a,ll b)
{
  ll res=1;
  while(b>0)
  {
    if(b&1)
    res*=a;
    a*=a;
    b>>=1;
  }
  return res;
}


// Function to factors of the given
// nu
vector<ll> getFactorization(ll x)
{
    ll count = 0;
    vector<ll> v;

    // Loop to find the divisors of
    // the number 2
    while (x % 2 == 0) {
        count++;
        x = x / 2;
    }
    if (count != 0)
        v.push_back(count);

    // Loop to find the divisors of the
    // given number upto SQRT(N)
    for (ll i = 3; i <= sqrt(x); i += 2) {
        count = 0;
        while (x % i == 0) {
            count++;
            x /= i;
        }
        if (count != 0)
            v.push_back(count);
    }

    // Condition to check if the rest
    // number is also a prime number
    if (x > 1) {
        v.push_back(1);
    }
    return v;
}

// Function to find the non-prime
// divisors of the given number
ll nonPrimeDivisors(ll N)
{
    vector<ll> v = getFactorization(N);
    ll ret = 1;

    // Loop to count the number of
    // the total divisors of given number
    for (ll i = 0; i < v.size(); i++)
        ret = ret * (v[i] + 1);

    ret = ret - v.size();
    return ret;
}





void solve()
{

   ll n;
   cin>>n;

   cout<<nonPrimeDivisors(n)<<endl;





}



int main()
{

	ios_base::sync_with_stdio(false);cin.tie(NULL);

	int t=1;
	cin>>t;
	while(t--)
	{
		solve();
	}
}
