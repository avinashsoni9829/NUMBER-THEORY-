#include<bits/stdc++.h>
using namespace std;

#define ll long long int
#define vi vector<int>
#define vl vector<ll>
#define inp(x)  for(auto &t:x) cin>>t;
#define itr     vector<int>::iterator
#define debug(a) cout << #a << "=" << a << ' '<<endl;
#define out(x)  for(auto &t:x) cout<<t<<" "; cout<<endl;
#define ff first
#define ss second
#define pb push_back
#define initialize(a,v)  for(int i=0;i<a.size();++i) a[i]=v;
int noofdig(int N)
{
	return floor(log10(N))+1;
}


void printDivisors(int n)
{
        for (int i=1; i<=sqrt(n); i++)
    {
        if (n%i == 0)
        {

            if (n/i == i)
                printf("%d ", i);

            else
                printf("%d %d ", i, n/i);
        }
    }
}

ll expo(ll a,ll b)
{
  ll res=1;
  while(b>0)
  {
    if(b&1)
    res*=a;
    a*=a;
    b>>=1;
  }
  return res;
}

const ll mx=1e7;
const ll mxm=1e12+7;
vector<bool>prime(mx,true);



void seive()
{
	prime[0]=prime[1]=false;

	for(ll  i=2;i*i<=mx;i++)
	{
		if(prime[i])
		{
			for(ll j=i*i;j<=mx;j+=i)
			prime[j]=false;
		}
	}

}

bool isPrime(ll n)
{
    // Corner cases
    if (n <= 1)  return false;
    if (n <= 3)  return true;

    // This is checked so that we can skip
    // middle five numbers in below loop
    if (n%2 == 0 || n%3 == 0) return false;

    for (int i=5; i*i<=n; i=i+6)
        if (n%i == 0 || n%(i+2) == 0)
           return false;

    return true;
}






void solve()
{

   ll n;
   cin>>n;
	 
   //cout<<sqrt(n)<<endl;

	 // for(int i=0;i<=n;++i)
	 // {
		//  if(prime[i])
		//  cout<<i<<" ";
	 // }
   ll cnt=0;
	for(ll  i=1;i<=sqrt(n);++i)
	{

		if(n%i==0)
		{
			if(n/i==i)
			{
			//	debug(i);
				if(!prime[i])
				cnt++;
			}
			else
			{
			//	debug(i);
			 if(!prime[i])
			 cnt++;
       if(!(isPrime(n/i)))
			 {
				 cnt++;
			 }



			}
		}
	}

	cout<<cnt<<endl;
	





}



int main()
{
	seive();
	ios_base::sync_with_stdio(false);cin.tie(NULL);

	int t=1;
	cin>>t;
	while(t--)
	{
		solve();
	}
}
